[tox]
requires =
    tox>=4
env_list =
    lint-{python,webapp}
    type
    py3{12}
labels =
    format = format-{python,webapp}
    build = build-{python,webapp}

[testenv:format-{python,webapp}]
skip_install = true
change_dir =
    webapp: src/webapp
allowlist_externals =
    webapp: npm
deps =
    python: isort
    python: black
commands_pre =
    webapp: npm install
commands =
    python: isort src
    python: black .
    webapp: npm run format

[testenv:lint-{python,webapp}]
skip_install = true
change_dir =
    webapp: src/webapp
allowlist_externals =
    webapp: npm
deps =
    python: isort
    python: black
commands_pre =
    webapp: npm install
commands =
    python: isort --check src
    python: black --check .
    webapp: npm run lint

[testenv:type]
extras =
    dev
    gui
    infra
deps =
    mypy
commands =
    mypy src

[testenv:py3{12}]
extras =
    dev
    infra
commands =
    pytest src/tests {posargs}

[testenv:build-{python,webapp}]
change_dir =
    webapp: src/webapp
allowlist_externals =
    webapp: npm
extras =
    dev
    gui
    record
    infra
commands_pre =
    webapp: npm install
commands =
    python: python -m build
    webapp: npm run build

[testenv:layer]
skip_install = true
commands:
    pip install --upgrade -r requirements.txt -r requirements-record.txt -t dist/layer

[testenv:synth]
allowlist_externals =
    npx
extras =
    infra
commands =
    npx -y cdk@latest synth {posargs}
